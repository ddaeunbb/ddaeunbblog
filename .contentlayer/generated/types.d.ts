// NOTE This file is auto-generated by Contentlayer

import type {
	Markdown,
	MDX,
	ImageFieldData,
	IsoDateTimeString,
} from 'contentlayer/core';
import * as Local from 'contentlayer/source-files';

export { isType } from 'contentlayer/client';

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString };

/** Document types */
export type Articles = {
	/** File path relative to `contentDirPath` */
	_id: string;
	_raw: Local.RawDocumentData;
	type: 'Articles';
	title: string;
	category: string;
	date: IsoDateTimeString;
	tags?: string[] | undefined;
	featured: boolean;
	thumbnail: string;
	/** MDX file body */
	body: MDX;
	slug: string;
	slugAsParams: string;
	readingTime: json;
	headings: json;
};

export type Log = {
	/** File path relative to `contentDirPath` */
	_id: string;
	_raw: Local.RawDocumentData;
	type: 'Log';
	title: string;
	category: string;
	date: IsoDateTimeString;
	tags?: string[] | undefined;
	featured: boolean;
	thumbnail: string;
	/** MDX file body */
	body: MDX;
	slug: string;
	slugAsParams: string;
	readingTime: json;
	headings: json;
};

/** Nested types */

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes;
export type AllTypeNames = DocumentTypeNames | NestedTypeNames;

export type DocumentTypes = Articles | Log;
export type DocumentTypeNames = 'Articles' | 'Log';

export type NestedTypes = never;
export type NestedTypeNames = never;

export type DataExports = {
	allDocuments: DocumentTypes[];
	allLogs: Log[];
	allArticles: Articles[];
};

export interface ContentlayerGenTypes {
	documentTypes: DocumentTypes;
	documentTypeMap: DocumentTypeMap;
	documentTypeNames: DocumentTypeNames;
	nestedTypes: NestedTypes;
	nestedTypeMap: NestedTypeMap;
	nestedTypeNames: NestedTypeNames;
	allTypeNames: AllTypeNames;
	dataExports: DataExports;
}

declare global {
	interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
	Articles: Articles;
	Log: Log;
};

export type NestedTypeMap = {};
